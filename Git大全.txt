本地操作

一、创建版本库（仓库 repository）
       1.  创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：

          $ mkdir learngit
          $ cd learngit

       2.  通过git init命令把这个目录变成Git可以管理的仓库
             $ git init
          	现在我们编写一个readme.txt文件，内容如下：
	Git is a version control system.
	Git is free software.

       3.把一个文件放到Git仓库只需要两步。

	第一步，用命令git add告诉Git，把文件添加到仓库：
	$ git add readme.txt
	第二步，用命令git commit告诉Git，把文件提交到仓库：
	$ git commit -m "wrote a readme file"
       4. 提交后，用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本           的区别

二.版本回退
      1.我们用  git log --pretty=oneline 命令查看文件每次都改了什么内容

      2. 在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是          HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。
     3. 我们要把当前版本回退到上一个版本
          git reset --hard HEAD^
     4. 回到刚才那个版本
         git reset --hard 1094a

三。撤销修改
         git checkout -- readme.txt
     2.删除文件
        从版本库中删除该文件，那就用命令git rm删掉，并且git commit
     3. 恢复文件
        另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新        版本：$ git checkout -- test.txt

    4. 分支冲突
            Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。
	解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。
	用git log --graph命令可以看到分支合并图。


四。添加远程仓库
      1.在自己的GitHub上新建一个仓库
      2. 在本地用 git remote add origin  https://github.com/LeeGuuo/learngit.git与远          程仓库建立连接
      3.  把本地库的所有内容推送到远程库上： $ git push -u origin master
      4. 克隆远程仓库
             git clone git@git.com/LeeGuuo/learngit.git
        

五。分支管理
      1.首先，我们创建dev分支，然后切换到dev分支：
             $ git checkout -b dev
      2.  然后，我们就可以在dev分支上正常提交，比如对readme.txt做个修改，加上一行
     3.  然后提交：
	$ git add readme.txt 
	$ git commit -m "branch test"
      4.  现在，dev分支的工作完成，我们就可以切换回master分支：
	$ git checkout master
      5.  我们把dev分支的工作成果合并到master分支上：
	$ git merge dev
      6。 合并完成后，就可以放心地删除dev分支了：
	$ git branch -d dev
      7. Bug分支
           当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支		issue-101来修复它，但是，等等，当前正在dev上进行的工作还没有提交：

           Git还提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继		续工作：$ git stash

           当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再		git stash pop，回到工作现场

          开发一个新feature，最好新建一个分支；
	如果要丢弃一个没有被合并过的分支，可以通过git branch -D <name>强行删除


六。Git pull
        将远程git仓库里的指定分支拉取到本地（本地不存在的分支)
	git pull origin dev2:dev2 
      

     

	












































